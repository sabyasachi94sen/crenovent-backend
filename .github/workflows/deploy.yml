name: Crenovent Backend Instance

on:
  push:
    branches:
      - main  # Trigger the workflow on pushes to the main branch
  pull_request:
    branches:
      - main  # Trigger the workflow on pull requests targeting the main branch

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log into Azure using OIDC
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        run: |
          docker build . -t crenoback:latest  # Build the image with a 'latest' tag

      - name: Tag Docker image
        run: |
          docker tag crenoback:latest crenoventbackendapp.azurecr.io/crenoback:${{ github.sha }}  # Tag the image for ACR

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: crenoventbackendapp.azurecr.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Push Docker image to ACR
        run: |
          docker push crenoventbackendapp.azurecr.io/crenoback:${{ github.sha }}  # Push the tagged image to ACR

      - name: Deploy to Azure Container Instance
        uses: azure/aci-deploy@v1
        with:
          resource-group: crenovent-backend
          name: crenovent-backend-container
          image: crenoventbackendapp.azurecr.io/crenoback:${{ github.sha }}
          cpu: 1
          memory: 1
          registry-username: ${{ secrets.REGISTRY_USERNAME }}
          registry-password: ${{ secrets.REGISTRY_PASSWORD }}
          restart-policy: OnFailure  # Set restart policy to restart on failure