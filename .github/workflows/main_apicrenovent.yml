name: Build and deploy container app to Azure Web App - apicrenovent

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: 'ubuntu-latest'

    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to registry
      uses: docker/login-action@v2
      with:
        registry: crenoventbackendapp.azurecr.io
        username: ${{ secrets.AzureAppService_ContainerUsername_748ca0213df144e19babc6a06973f3be }}
        password: ${{ secrets.AzureAppService_ContainerPassword_b66b1d3ef7d94ac096896ae91b2f3507 }}

    - name: Build and push container image to registry
      uses: docker/build-push-action@v3
      with:
        push: true
        tags: crenoventbackendapp.azurecr.io/crenoback:${{ github.sha }}
        file: ./Dockerfile

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'apicrenovent'
        slot-name: 'production'
        publish-profile: ${{ secrets.AzureAppService_PublishProfile_3b93cdfabd52405293062155e8e18063 }}
        images: 'crenoventbackendapp.azurecr.io/crenoback:${{ github.sha }}'


name: Crenovent Backend Instance

on:
  push:
    branches:
      - main  # Trigger the workflow on pushes to the main branch
  pull_request:
    branches:
      - main  # Trigger the workflow on pull requests targeting the main branch

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        run: |
          docker build . -t crenoback:latest  # Build the image with a 'latest' tag

      - name: Tag Docker image
        run: |
          docker tag crenoback:latest crenoventbackendapp.azurecr.io/crenoback:${{ github.sha }}  # Tag the image for ACR

      - name: Log in to registry
        uses: docker/login-action@v2
        with:
          registry: crenoventbackendapp.azurecr.io
          username: ${{ secrets.AzureAppService_ContainerUsername_748ca0213df144e19babc6a06973f3be }}
          password: ${{ secrets.AzureAppService_ContainerPassword_b66b1d3ef7d94ac096896ae91b2f3507 }}

      - name: Push Docker image to ACR
        run: |
          docker push crenoventbackendapp.azurecr.io/crenoback:${{ github.sha }}  # Push the tagged image to ACR

      - name: Deploy to Azure Container Instance
        uses: azure/aci-deploy@v1
        with:
          resource-group: crenovent-backend
          name: crenovent-backend-container
          image: crenoventbackendapp.azurecr.io/crenoback:${{ github.sha }}
          cpu: 1
          memory: 1
          registry-username: ${{ secrets.REGISTRY_USERNAME }}
          registry-password: ${{ secrets.REGISTRY_PASSWORD }}
          restart-policy: OnFailure  # Set restart policy to restart on failure